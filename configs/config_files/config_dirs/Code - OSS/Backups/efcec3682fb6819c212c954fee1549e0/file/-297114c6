file:///home/lukas/Documents/ETH/MASTER_THESIS/code/ndvi_corr/eval_correction_method.R {"mtime":1658165525357,"ctime":1658102634996,"size":1774,"etag":"393j4fr811q7","orphaned":false,"typeId":""}
require("reticulate") # to load pyhton data frame

# load data
source_python("my_utils/R_read_pkl.py")
dir_name <- "./data/computation_results/pixels_itpl_corr_dict_array/"
max_file <- as.integer(gsub(".pkl", "", list.files(dir_name)))
lists <- load_pickle(paste0(dir_name, as.character(max_file), ".pkl"))

# get data into usable format
template_dim <- c(2, 2, length(lists[[1]][[1]][[1]]))
template_names <- list(strat=c("rob", "id"), itpl_meth=c("ss", "dl"), short_names=names(lists[[1]][[1]][[1]]))

# strat x itpl_method x short_names
list_template <- array(list(), dim = template_dim, dimnames = template_names)
NDVI_ITPL_DATA <- vector("list", length(lists))


for (pix in seq_along(lists)) {
    temp <- list_template
    for (strat in c("rob", "id")) {
        for (itpl_meth in c("ss", "dl")) {
            for (short_name in names(lists[[1]][[1]][[1]])) {
                temp[[strat, itpl_meth, short_name]] <- lists[[pix]][[strat]][[itpl_meth]][[short_name]]
            }
        }
    }
    NDVI_ITPL_DATA[[pix]] <- list()
    NDVI_ITPL_DATA[[pix]][["itpl"]] <- temp
    NDVI_ITPL_DATA[[pix]][["yield"]] <- lists[[pix]]$yield
}

NDVI_ITPL_DATA



summary_functions <- list(
    max = max,
    min = min
)
get_table_row_with_covariates_and_yield <- function(ndvi_ts, yield) {
    covariates <- sapply(summary_functions, function(fun) fun(ndvi_ts))
    c(yield = yield, covariates)
}

# pix x   strat x itpl_method x short_names   x (covariates,yield)
est_dimnames <- c(
    pix=list(seq_along(lists)), template_names, 
    covariates=list(c(names(summary_functions), "yield"))
)
array_for_estimation <- array(NA,
    dim = c(pix=length(lists), template_dim, length(summary_functions) + 1),
    dimnames = est_dimnames
)
array_for_estimation
est_dimnames

grid <- as.matrix(sapply(expand.grid(c(pix=list(seq_along(lists)), template_names)), as.character))



